General Box description
=======================
a box has:
- controls (like switches/knobs etc) that can send their current state.
- displays (like lights/gauges/displays etc) that can have their state changed

Each box should have a unique ID
(suggested format "MANUFACTURER_ID-BOX_TYPE-XXXXX" eg "Motion Capture-Switch
Box v0-9aef456")

Each of the controls/displays should have a unique string name (eg TOGGLE0,
LED0 etc)

Prototype Box Operation
=======================

The protoptype box initially used to develop the system consists of a number of
devices connected to an Arduino Mega with an etherney shield.

The prototype example box consists of:

Controls:
---------
- 2 toggle switches,
- 2 momentary on switches,
- 2 rotary encoders that also have momentary on switches and
- a 3 position rotary switch that acts like 2 toggle switches but only 1 can be
  on at a time)

Displays:
--------
- 6 leds (3 red and 3 green)

The box has 2 modes: normal and diagnostic. It should boot up in normal mode.

In normal mode, the box will flash all red leds regularly until it can connect
to an XP plugin.  After that it will send any detected control changes
(ie changes of switch/knob positions) to the plugin and act on device messages
from the plugin by setting leds.

In diagnostic mode, changing switches on the box should generate different led light
displays - this used to test all switches work

to change modes:
----------------

- hold both rotary encoder push buttons down simultaneously to put box in diagnostic mode

- hold both red push buttons down simultaneously to return box to normal mode



Communication Protocol
======================

box IP currently hard coded to be 192.168.0.178

messages from box to XP
-----------------------

Box sends UDP messages to XP plugin using port 8889

To find the Xplane plugin, on box startup it will send a "XP Plugin Fish" string
on the broadcast address using port 8889.

If it gets a response "Avduino Box Fish" on port 8888 it will set the IP
address of the responder as the XPlane address.

	format: "XP Plugin Fish"
		try and get a response from the plugin
		(expecting an "Avduino Box Fish" message in return)

	format "BOXID:[NAME-TYPE, NAME-TYPE, ...]
		description of box where:
		BOXID  = unique box identifier (eg "MC:SB00:AEDFE0A5B3")
		NAME = a string identifying a control or device (eg SWITCH0, LED1 etc)
		TYPE   = a description of the control or device
		eg
			CB : control that sends 0:1 (binary like a switch)
			CI : control that sends 0,1,2... (integer value eg heading)
			CF : control that sends XXX.YYY (float like a radio freq 125.100)	
			DB : device that accepts binary (eg LED that can be turned off|on)
			DI : device that accepts integer value
			DF : device that accepts a float value


	format: "NAME:Y"
		where NAME = control name (eg SWITCH2)
		      Y = value 
		eg "TWIST1:270" or "SWITCH2:1"


messages to box from XP:
------------------------

The box reads UDP messages sent to it on port 8888

format: "XP Avduino Fish" 
	
	treat IP address this message comes from as the IP address of the XP
	plugin (and respond with a description of the box)

format: "NAME:Y"
	set device value in box
		where NAME = device name (eg LED1)
		      Y = value

	eg:
		LED2:1	 - means turn LED2 on

all other messages:
	return unique box identifier


see simulatePlugin.sh for examples of communication protocol



